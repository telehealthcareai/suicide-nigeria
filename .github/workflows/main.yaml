name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-branch:
    runs-on: ubuntu-latest

    timeout-minutes: 2
    concurrency:
      group: ci-check-branch-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Check if the PR's branch is updated
        if: ${{ github.event_name == 'pull_request' }}
        uses: osl-incubator/gh-check-pr-is-updated@1.0.0
        with:
          remote_branch: origin/main
          pr_sha: ${{ github.event.pull_request.head.sha }}

  tests:
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - "3.12"
        os:
          - "ubuntu"

    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 20

    defaults:
      run:
        shell: bash -l {0}

    concurrency:
      group: ci-tests-${{ matrix.os }}-${{ matrix.python_version }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          environment-file: conda/dev.yaml
          channels: conda-forge,nodefaults
          activate-environment: suicide-nigeria
          auto-update-conda: true
          conda-solver: libmamba
          python-version: "${{ matrix.python_version }}"

      - name: Check Poetry lock
        run: poetry check

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run style checks
        if: success() || failure()
        run: |
          pre-commit install
          makim tests.linter
