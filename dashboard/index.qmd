---
title: "Data Analysis of Suicide in Nigeria"
author: "Gift David"
format:
  dashboard:
    logo: assets/images/thcai-logo.png
    nav-buttons:
      - icon: file
        title: report
        href: https://docs.google.com/document/d/15hE46jFvj5pnw4lbcJsg3NOOu0spqng-XktD4CuAUO4/edit?usp=sharing
execute:
  echo: false
  warning: false
  message: false
  results: hide
---

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from ipywidgets import interact, widgets

```

```{python}
# Load your data
suicide_data = pd.read_csv("data/who_suicide_latest.csv")
poverty_data = pd.read_csv("data/ndp_poverty2004_2010.csv")
unemployment_data = pd.read_csv("data/unemployed.csv")
nigerian_suicide_cases = suicide_data[suicide_data["GEO_NAME_SHORT"] == "Nigeria"]
total_unemployed = unemployment_data[unemployment_data["indicator"] == "Total Unemployed"]
```
```{python}

nigerian_suicide_cases['Date'] = suicide_data['DIM_TIME'].copy()
pov_data_sorted = poverty_data.sort_values('Date')
pov_mask = pov_data_sorted[['region', 'Date', 'Value']].reset_index()
sui_mask = nigerian_suicide_cases[['DIM_TIME','RATE_PER_100000_N','DIM_SEX','DIM_AGE','Date','GEO_NAME_SHORT']]
merged_sp1 = pov_mask.merge(sui_mask, on='Date', how='inner')
```


# Overview

```{python}
nigerian_suicide_cases.rename(columns={
    "DIM_TIME": "Suicide_Year",
    "DIM_SEX": "Gender",
    "RATE_PER_100000_N": "Suicide_Rate_N",
    "RATE_PER_100000_NL": "Lower_Rate_NL",
    "RATE_PER_100000_NU": "Upper_Rate_NU"
}, inplace=True)

total_unemployed.rename(columns={
    "Value": "UE_Value",
    "Date": "UE_Date",
}, inplace=True)

poverty_data.rename(columns={
    "Value": "Pov_Value"
}, inplace=True)

male_suicide_rate = nigerian_suicide_cases[nigerian_suicide_cases["Gender"] == "MALE"]
female_suicide_rate = nigerian_suicide_cases[nigerian_suicide_cases["Gender"] == "FEMALE"]
overall_suicide_rate = nigerian_suicide_cases[nigerian_suicide_cases["Gender"] == "TOTAL"]
mask = (nigerian_suicide_cases["Suicide_Year"] >= 2000) & (nigerian_suicide_cases["Suicide_Year"] <= 2019)

```

## Row

```{python}
#| content: valuebox
#| title: "Male suicide rate per 100,000 for year 2019"

male_alarming =nigerian_suicide_cases.loc[nigerian_suicide_cases["Suicide_Rate_N"].idxmax(), ["DIM_AGE", "Gender", "Suicide_Rate_N"]]
male_2019 =  male_alarming['Suicide_Rate_N']
male_rate = male_suicide_rate.loc[mask]
total_male_rate = round(male_rate["Suicide_Rate_N"].mean(), 2)

dict(
    icon="gender-male",
    color="white",
    value=float(male_2019)
)
```

```{python}
#| content: valuebox
#| title: "Female suicide rate per 100,000 for year 2019"

female_row = nigerian_suicide_cases[nigerian_suicide_cases["Gender"] == "FEMALE"].loc[nigerian_suicide_cases[nigerian_suicide_cases["Gender"] == "FEMALE"]["Suicide_Rate_N"].idxmax(), ["DIM_AGE", "Suicide_Rate_N"]]
female_2019 =  female_row['Suicide_Rate_N']

female_rate = female_suicide_rate.loc[mask]
total_female_rate = round(female_rate["Suicide_Rate_N"].mean(), 2)

dict(icon="gender-female", color="#FFA725", value=float(female_2019))
```

```{python}
#| content: valuebox
#| title: "Average suicide rate from 2000 to 2019"

suicide_rate_for_total_genders = nigerian_suicide_cases[(nigerian_suicide_cases["Gender"] == "TOTAL") & (nigerian_suicide_cases["DIM_AGE"] == "TOTAL")]
average_suicide_value = suicide_rate_for_total_genders["Suicide_Rate_N"].mean()

total__rate = male_suicide_rate.loc[mask]
total_ov_rate = round(overall_suicide_rate["Suicide_Rate_N"].mean(), 2)

dict(
    icon="people",
    color="white",
    value=round(float(average_suicide_value), 2)
)
```

## Row {font-size = 1px}

```{python}
#| title: Suicide Rate Comparisons by Age categories and Gender

fig = px.scatter_3d(
    nigerian_suicide_cases,
    x="DIM_AGE",
    y="Suicide_Rate_N",
    z="Gender",  # Use Gender as the third axis (categorical)
    color="Gender",  # Color-code by gender
    title="Suicide Rate by Age and Gender in Nigeria (3D)",
    labels={"Suicide_Rate_N": "Suicide Rate (per 100k)", "Age": "Age (Years)"},
    hover_data={"DIM_AGE": True, "Gender": True, "Suicide_Rate_N": ":.2f"},
    symbol="Gender",  # Optional: Different symbols for genders
    opacity=0.8,
    height=600,
)

# Show the plot
fig.show()

```

### Column {.tabset}

```{python}
#| title: Summary of all suicide rate
filtered_df = nigerian_suicide_cases[nigerian_suicide_cases['Gender'].isin(['MALE', 'FEMALE'])]

# Group by Gender and sum Suicide_Rate_N
gender_totals = filtered_df.groupby('Gender')['Suicide_Rate_N'].sum()

# Plot
gender_totals.plot(kind='bar', figsize=(6, 4))
plt.tight_layout()
plt.show()

```
```{python}
#| title: Suicide Mortality Trends in Nigeria (2000-2017)

male_suicide_rate.sort_values("Suicide_Year", inplace=True)
female_suicide_rate.sort_values("Suicide_Year", inplace=True)

plt.figure(figsize=(12, 6))
sns.lineplot(
    data=male_suicide_rate,
    x="Suicide_Year", y="Suicide_Rate_N",
    marker="o",
    label="Male",
    color="#1f77b4"
)
sns.lineplot(
    data=female_suicide_rate,
    x="Suicide_Year", y="Suicide_Rate_N",
    marker="o", label="Female", color="#ff7f0e"
)
sns.lineplot(
    data=overall_suicide_rate,
    x="Suicide_Year", y="Suicide_Rate_N",
    marker="o",
    label="overall_suicide_rate",
    color="#2ca02c"
)

plt.fill_between(
    male_suicide_rate["Suicide_Year"],
    male_suicide_rate["Lower_Rate_NL"],
    male_suicide_rate["Upper_Rate_NU"],
    alpha=0.2, color="#1f77b4"
)
plt.fill_between(
    female_suicide_rate["Suicide_Year"],
    female_suicide_rate["Lower_Rate_NL"],
    female_suicide_rate["Upper_Rate_NU"],
    alpha=0.2, color="#ff7f0e"
)

plt.ylim(0, 12)
plt.grid(alpha=0.3)
plt.legend()
plt.show()

```

# Socio-Economics Indicator (Poverty)

## Summary Card

```{python}
merged_sp1.groupby('Date').agg({
    'Value': 'mean',
    'RATE_PER_100000_N': 'mean'
}).round(2)

```


```{python}
#| content: valuebox
#| title: "Average Poverty rate for 2004"
#| icon: report
#| color: secondary
data_2004 = merged_sp1[merged_sp1['Date'] == 2004]

average_poverty_rate2004 = round(data_2004["Value"].mean(), 2)


dict(
    icon="report",
    color="secondary",
    value=float(average_poverty_rate2004)
)
```

```{python}
#| title: Poverty vs. Suicide Rate (Nigeria, 2004 & 2010)

plt.scatter(merged_sp1['Value'], merged_sp1['RATE_PER_100000_N'])
```

## Row {.tabset}
```{python}
# | title: "Poverty Data for Year (2010)"

nigerian_suicide = (
    nigerian_suicide_cases.groupby("Suicide_Year")["Suicide_Rate_N"]
    .mean()
    .reset_index()
)

# Plot trends
plt.figure(figsize=(12, 6))
sns.lineplot(data=nigerian_suicide, x="Suicide_Year", y="Suicide_Rate_N", marker="o")
plt.axvline(2010, color="red", linestyle="--", label="Poverty Data Year (2010)")
plt.legend()
plt.show()
```

```{python}
#| title: "Gender comparison for year 2010"
suicide_2010 = nigerian_suicide_cases[nigerian_suicide_cases["Suicide_Year"] == 2010]
sns.barplot(data=suicide_2010, x="Gender", y="Suicide_Rate_N")

```
```{python}
#| title: "Poverty vs. Suicide Rate (2004 vs 2010)"
summary = merged_sp1.groupby('Date').agg({
    'Value': 'mean',          # Poverty metric
    'RATE_PER_100000_N': 'mean'  # Suicide rate
}).reset_index()


plt.bar(summary['Date'], summary['Value'], label='Poverty')
plt.plot(summary['Date'], summary['RATE_PER_100000_N'], color='red', marker='o', label='Suicide Rate')
plt.show()
```

```{python}
#| title: suicide rates by age group for the year 2010 in Nigeria

suicide_2010 = nigerian_suicide_cases[nigerian_suicide_cases["Suicide_Year"] == 2010]
sns.boxplot(data=suicide_2010, x="DIM_AGE", y="Suicide_Rate_N")
```



# Socio-Economics Indicator (Unemployment)

### Row
```{python}
#|title: Total Unemployed in Nigeria by Group (Yearly)
total_unemployed['Year_of_unemployment'] = total_unemployed['UE_Date'].str.extract(r'(\d{4})').astype(int)

sns.set_theme()
plt.figure(figsize=(12,6))
sns.lineplot(
    data=total_unemployed,
    x='Year_of_unemployment',
    y='UE_Value',
    hue='group',
    marker='o'
)
plt.tight_layout()
plt.show()

```
```{python}
unemployment_data = pd.read_csv("data/unemployed.csv")
nigerian_suicide_cases = pd.read_csv("data/nigerian_suicide_cases.csv")
nigerian_suicide_cases.drop(columns=['Unnamed: 0'], inplace=True)
nigerian_suicide_cases['Date'] = nigerian_suicide_cases['DIM_TIME'].copy()
unemployment_data = (unemployment_data[unemployment_data["indicator"] == "Total Unemployed"]).sort_values('Date').reset_index(drop=True)
sui_mask = nigerian_suicide_cases[['DIM_TIME','RATE_PER_100000_N','DIM_SEX','DIM_AGE','Date','GEO_NAME_SHORT']]
unemployment_data.loc[:, 'Date'] = unemployment_data['Date'].astype(str)
sui_mask.loc[:, 'Date'] = sui_mask['Date'].astype(str)
merged_su1 = unemployment_data.merge(sui_mask, on='Date', how='inner')


```

```{python}
#| title: Unemployment vs. Suicide Rates (per 100k)
sns.scatterplot(
    data=merged_su1,
    x='Value',       # Unemployment rate
    y='RATE_PER_100000_N',  # Suicide rate
    hue='Date',      # Color by year
    style='DIM_SEX', # Shape by gender
    s=100            # Marker size
)
```


```{python}
#| title: Unemployment trend
plt.figure(figsize=(12, 6))

# Aggregate data by Date (year)
trends = merged_su1.groupby('Date').agg({
    'Value': 'mean',               # Mean unemployment
    'RATE_PER_100000_N': 'mean'    # Mean suicide rate
}).reset_index()

# Plot unemployment trend
sns.lineplot(
    data=trends,
    x='Date',
    y='Value',
    marker='o',
    label='Unemployment Rate',
    color='blue'
)

# Plot suicide rate trend (on secondary axis)
plt.twinx()
sns.lineplot(
    data=trends,
    x='Date',
    y='RATE_PER_100000_N',
    marker='s',
    label='Suicide Rate',
    color='red'
)
```
###
```{python}
#| title: Unemployment Rate by Gender
fig, axes = plt.subplots(1, 2, figsize=(14, 6), sharex=True)

# Unemployment
sns.barplot(
    data=merged_su1,
    x='DIM_SEX',
    y='Value',
    hue='Date',
    palette='Blues',
    alpha=0.7,
    ax=axes[0]
)


# Suicide Rate
sns.barplot(
    data=merged_su1,
    x='DIM_SEX',
    y='RATE_PER_100000_N',
    hue='Date',
    palette='Reds',
    alpha=0.7,
    ax=axes[1]
)


```
```{python}
#| title: Unemployment Rate Distribution by Year
plt.figure(figsize=(12, 6))

# Unemployment distribution
plt.subplot(1, 2, 1)
sns.boxplot(data=merged_su1, x='Date', y='Value', palette='Blues')

# Suicide rate distribution
plt.subplot(1, 2, 2)
sns.boxplot(data=merged_su1, x='Date', y='RATE_PER_100000_N', palette='Reds')
```
