groups:
  clean:
    tasks:
      all:
        help: Clean unnecessary temporary files
        backend: bash
        run: |
          rm -fr build/
          rm -fr dist/
          rm -fr .eggs/
          rm -f .coverage
          rm -fr htmlcov/
          rm -fr .pytest_cache
          rm -fr .mypy_cache
          rm -fr .ruff_cache
          find . -name '*.egg-info' -exec rm -fr {} +
          find . -name '*.egg' -exec rm -f {} +
          find . -name '*.pyc' -exec rm -f {} +
          find . -name '__pycache__' -exec rm -fr {} +
          find . -name '*.pyo' -exec rm -f {} +
          find . -name '*~' -exec rm -f {} +

  pages:
    tasks:
      build:
        help: Build documentation
        run: |
          quarto render . --log-level info --verbose

      preview:
        help: Preview documentation page locally
        run: |
          quarto preview
  tests:
    tasks:
      linter:
        help: Run linter tools
        run: |
          pre-commit install
          pre-commit run --all-files --verbose

      unit:
        help: run tests
        args:
          path:
            help: Specify the location of the tests
            type: string
            default: ""
          params:
            help: Specify parameters to be used for tests
            type: string
            default: "-vv"
        run: |
          pytest ${{ args.path }} ${{ args.params }}

      ci:
        help: run the sames tests executed on CI
        hooks:
          pre-run:
            - task: tests.unit
            - task: tests.linter

  package:
    tasks:
      build:
        help: "Build the package"
        run: |
          poetry build

  release:
    vars:
      app: |
        npx --yes \
        -p semantic-release \
        -p "@semantic-release/commit-analyzer" \
        -p "@semantic-release/release-notes-generator" \
        -p "@semantic-release/changelog" \
        -p "@semantic-release/exec" \
        -p "@semantic-release/github" \
        -p "@semantic-release/git" \
        -p "@google/semantic-release-replace-plugin" \
        semantic-release

    tasks:
      ci:
        help: run semantic release on CI
        run: ${{ vars.app }} --ci

      dry:
        help: run semantic release in dry-run mode
        run: ${{ vars.app }} --dry-run
